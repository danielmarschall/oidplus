
FEATURE OIDS ("Weak interfaces")
============

***
*** Attention
*** 
*** This method of weak interfaces has been discontinued, because types could not be easily checked.
*** The new way is to use "real" interfaces with the prefix "INTF_OID", e.g. "INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_1"
*** The OIDplus autoloader will make sure that these interfaces are replaced with a "fake" interface,
*** in case the plugin defining the interface is not installed.
***
*** So: Please remove OIDplusBaseClass::implementsFeature and instead use real interfaces with the prefix "INTF_OID".
***



--- Old description follows ---


TL;DR:	The system communicates with its plugins using normal PHP interfaces
	or function calls.
	Plugins communicate with other plugins using the OIDplusPlugin::implementsFeature()
	function, which provides a way of "optional" interfaces that do not raise
	an Exception if they are missing.

PHP classes belonging to the OIDplus system (such as the class handling the tree menu structure,
the sitemap, the AJAX handling, etc) are communicating to plugins the "normal way", i.e.
the plugin class defines a function which is called by the OIDplus system.

Plugins can offer interfaces/functionalities that can be used by other plugins.
For Example: The OOBE plugin queries other plugins if they want to be included
in the Out-Of-Box-Experience configuration. Therefore the plugins need to implement an
"oobeEntry" function. However, if we would do it the normal way (the OOBE plugin defining
a PHP interface and the other plugins implementing it), the plugins would not work
anymore if the plugin offering the interface is missing, due to a PHP compilation error.
Therefore, we use a functionality called "features".
A plugin can ask another plugin if it supports a feature (defined as OID) using
the function implementsFeature().
If it supports the feature with a given OID, the plugin promises that it
contains a set of functions defined by that OID.

All classes of OIDplus inherit from OIDplusBaseClass, which implements
OIDplusBaseClass::implementsFeature(). Therefore, the "feature OID" functionality
works also for plugin-like classes (e.g. OIDplusObject) and not only for the
real plugin classes (OIDplusPlugin).

Currently, there are following features defined in the standard plugins of OIDplus:

*** NOW IN:  plugins/viathinksoft/adminPages/050_oobe/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_1.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.1> {
	public function oobeEntry($step, $do_edits, &$errors_happened);
	public function oobeRequested();
}

*** NOW IN:  plugins/viathinksoft/publicPages/000_objects/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_2.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.2> {
	public function modifyContent($id, &$title, &$icon, &$text);
}

*** NOW IN:  plugins/viathinksoft/publicPages/000_objects/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_3.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.3> {
	public function beforeObjectDelete($id);
	public function afterObjectDelete($id);
	public function beforeObjectUpdateSuperior($id, &$params);
	public function afterObjectUpdateSuperior($id, &$params);
	public function beforeObjectUpdateSelf($id, &$params);
	public function afterObjectUpdateSelf($id, &$params);
	public function beforeObjectInsert($id, &$params);
	public function afterObjectInsert($id, &$params);
}

*** NOW IN:  plugins/viathinksoft/publicPages/100_whois/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_4.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.4> {
	public function whoisObjectAttributes(string $id, array &$out);
	public function whoisRaAttributes(string $email, array &$out);
}

*** NOW IN:  plugins/viathinksoft/publicPages/090_login/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_5.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.5> {
	public function alternativeLoginMethods();
}

*** NOW IN:  plugins/viathinksoft/publicPages/000_objects/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_6.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.6> {
	public function gridGeneratorLinks($objParent);
}

*** NOW IN:  plugins/viathinksoft/publicPages/000_objects/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_7.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.7> {
	public function getAlternativesForQuery($id);
}

*** NOW IN:  plugins/viathinksoft/raPages/010_notifications/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_8.class.php
*** NOW IN:  plugins/viathinksoft/adminPages/010_notifications/INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_8.class.php
Interface <1.3.6.1.4.1.37476.2.5.2.3.8> {
	public function getNotifications($user=null); // return array of array($severity, $htmlMessage)
}
