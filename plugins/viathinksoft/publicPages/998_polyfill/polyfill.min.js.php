<?php

/*
 * OIDplus 2.0
 * Copyright 2019 - 2024 Daniel Marschall, ViaThinkSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// We do this stuff to avoid that the client includes an external JavaScript from an external server,
// since some users might have a problem with that (in regards privacy of their IP address etc.)
// So, the OIDplus webserver will act as proxy.

use ViaThinkSoft\OIDplus\Core\OIDplus;
use ViaThinkSoft\OIDplus\Plugins\PublicPages\Polyfill\INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_10;

const MINIFY_POLYFILL = true; // TODO: put into baseconfig?

const POLYFILL_CACHE_MAX_AGE = 24 * 60 * 60; // 1 day, TODO: put into baseconfig?

# ---

error_reporting(0);

for ($sysdir_depth=4; $sysdir_depth<=7; $sysdir_depth++) {
	// The plugin directory can be in plugins (i=4), userdata_pub/plugins (i=5), or userdata_pub/tenant/.../plugins/ (i=7)
	$candidate = __DIR__. str_repeat('/..', $sysdir_depth) . '/includes/oidplus.inc.php';
	if (file_exists($candidate)) {
		require_once $candidate;
		break;
	}
}

OIDplus::init(false);

$requestedPolyfills = [
	// For various AJAX calls
	'fetch',
	'URL',

	// For OIDplusPagePublicWhois.js, OIDplusPageAdminSoftwareUpdate.js, and OIDplusPageAdminColors.js
	'String.prototype.includes',

	// For TinyMCE if it is included inside oidplus.min.js.php ( https://github.com/tinymce/tinymce/blob/5c1702a119e683f93e03ecc2231f11d17ce57395/modules/tinymce/src/core/main/ts/api/EditorManager.ts#L271 )
	'document.currentScript'
];
foreach (OIDplus::getAllPlugins() as $plugin) {
	if ($plugin instanceof INTF_OID_1_3_6_1_4_1_37476_2_5_2_3_10) {
		$requestedPolyfills = array_merge($requestedPolyfills, $plugin->requestPolyfills());
	}
}
$requestedPolyfills = array_unique($requestedPolyfills);

if (!isset($_SERVER['HTTP_USER_AGENT'])) {
	$out = '/* ERROR: No User Agent available */';
	httpOutWithETag($out, 'application/javascript', 'polyfill'.(MINIFY_POLYFILL ? '.min' : '').'.js');
}

$ua = $_SERVER['HTTP_USER_AGENT'];

if (MINIFY_POLYFILL) {
	$cache_file = OIDplus::getUserDataDir("cache").'js_polyfill_'.md5(implode(',',$requestedPolyfills)).'_'.md5($ua).'.min.js';
} else {
	$cache_file = OIDplus::getUserDataDir("cache").'js_polyfill_'.md5(implode(',',$requestedPolyfills)).'_'.md5($ua).'.js';
}

if (!file_exists($cache_file) || (time()-filemtime($cache_file)) > POLYFILL_CACHE_MAX_AGE) {

	// Configure features here: https://cdnjs.cloudflare.com/polyfill/
	if (MINIFY_POLYFILL) {
		$url = 'https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?version=4.8.0&features='.urlencode(implode(',',$requestedPolyfills));
	} else {
		$url = 'https://cdnjs.cloudflare.com/polyfill/v3/polyfill.js?version=4.8.0&features='.urlencode(implode(',',$requestedPolyfills));
	}

	if (!url_get_contents_available(true, $reason)) {
		$out = '/* ERROR: Cannot connect to the Internet. '.$reason.' */';
		httpOutWithETag($out, 'application/javascript', 'polyfill'.(MINIFY_POLYFILL ? '.min' : '').'.js');
	}

	$cont = url_get_contents($url, [], $ua);

	if ($cont === false) {

		if (file_exists($cache_file)) {
			$out = file_get_contents($cache_file);

			// In case polyfill.io is down, don't delay further requests
			// Instead, try again after the next max cache age
			touch($cache_file);
		} else {
			$out = '/* ERROR: polyfill.io (' . $url . ') not available and no cache file exists! */';
			httpOutWithETag($out, 'application/javascript', 'polyfill' . (MINIFY_POLYFILL ? '.min' : '') . '.js');
		}

	} else {

		$ua = str_replace('*/', '', $ua);
		$cont = '/* Polyfill ' . $url . ' for ' . $ua . ' */' . $cont;

		if (POLYFILL_CACHE_MAX_AGE > 0) {
			@file_put_contents($cache_file, $cont);
		}

		$out = $cont;
	}

} else {

	$out = file_get_contents($cache_file);

}

# ---

if (!$out) $out = '';
httpOutWithETag($out, 'application/javascript', 'polyfill'.(MINIFY_POLYFILL ? '.min' : '').'.js');
